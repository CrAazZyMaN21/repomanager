#!/usr/bin/env bash
set -u
export TERM="xterm-256color"
export COLUMNS=190
export GPG_TTY=$(tty)

# Main variables
PWD=$(dirname "$0")
WWW_DIR="/var/www/repomanager"
WWW_USER=""
DATA_DIR="/var/lib/repomanager"
REPOS_DIR="/home/repo"
DB="$DATA_DIR/db/repomanager.db"
GPGHOME="$DATA_DIR/.gnupg"
PROCEED_PERMISSIONS="0"

# Colors
GREEN=$(tput setaf 2)
RED=$(tput setaf 1)
YELLOW=$(tput setaf 3)
RESET=$(tput sgr0)

# User detection
if [ "$(id -u)" -ne "0" ];then
    echo -e "\n${YELLOW}Must be executed with sudo${RESET}\n"
    exit
fi

## ↓ FUNCTIONS ↓ ##

# print help
function help
{ 
    echo -e "\n   Available parameters:"
    echo -e "   -p | --set-permissions  ➤  Set permissions on repomanager directories and files.\n\n\n"
}

# Set correct permissions on all directories and files used by repomanager
function permissions
{
    # Check if directories and files exist
    if [ ! -d "$WWW_DIR" ];then
        echo -e "[$YELLOW ERROR $RESET] '$WWW_DIR' web directory not found."
        exit 1
    fi
    if [ ! -d "$DATA_DIR" ];then
        echo -e "[$YELLOW ERROR $RESET] '$DATA_DIR' data directory not found."
        exit 1
    fi
    if [ ! -d "$REPOS_DIR" ];then
        echo -e "[$YELLOW ERROR $RESET] '$REPOS_DIR' repos directory not found."
        exit 1
    fi

    if [ -z "$WWW_USER" ];then
        WWW_USER=$(/usr/bin/sqlite3 -noheader -batch -cmd '.timeout 5000' "$DB" "SELECT WWW_USER FROM settings" | sed 's/ //g')
        if [ $? -ne 0 ];then
            echo -e "[$YELLOW ERROR $RESET] Unable to get WWW_USER from database."
            exit 1
        fi
        if [ -z "$WWW_USER" ];then
            echo -e "[$YELLOW ERROR $RESET] WWW_USER could not be retrieved from database."
            exit 1
        fi
    fi

    echo -ne "${YELLOW} Setting permissions... ${RESET}"
 
    # Permissions on web directory
    find "$WWW_DIR" -type d -exec chmod 0770 {} \;
    find "$WWW_DIR" -type f -exec chmod 0660 {} \;
    chmod 750 "$WWW_DIR"
    chown -R ${WWW_USER}:repomanager "$WWW_DIR"

    # Permissions on data directory
    find "$DATA_DIR" -type d -exec chmod 0770 {} \;
    find "$DATA_DIR" -type f -exec chmod 0660 {} \;
    chmod 770 "$DATA_DIR"
    chown -R ${WWW_USER}:repomanager "$DATA_DIR"

    if [ -f "$WWW_DIR/bin/repomanager" ];then
        chmod 550 $WWW_DIR/bin/repomanager
    fi

    # Permissions on repos directory
    find "$REPOS_DIR" -type d -exec chmod 0770 {} \;
    find "$REPOS_DIR" -type f -exec chmod 0660 {} \;
    chmod 770 "$REPOS_DIR"
    chown -R ${WWW_USER}:repomanager "$REPOS_DIR"

    # Permissions on .gnupg directory
    if [ -d "$GPGHOME" ];then
        chown -R ${WWW_USER}:repomanager $GPGHOME
        chmod 700 $GPGHOME
        # Permissions on passphrase
        if [ -f "$GPGHOME/passphrase" ];then 
            chmod 400 $GPGHOME/passphrase
        fi
    fi
    # Permissions on GPG public key
    if [ -d "$REPOS_DIR/gpgkeys" ];then
        chown ${WWW_USER}:repomanager $REPOS_DIR/gpgkeys/*pub
        chmod 660 $REPOS_DIR/gpgkeys/*pub
    fi

    echo -e "${GREEN}OK${RESET}\n"
}

echo '

 ______  ____ ______   ____   _____ _____   ____  _____    ____   ___________
 \_  _ \/ __ \\____ \ /  _ \ /     \\__  \ /     \\__  \  / ___\_/ __ \_  __ \
 |  | \|  ___/|  |_> )  (_) )  Y Y  \/ __ \|   |  \/ __ \/ /_/  >  ___/|  | \/
 |__|   \___  >   __/ \____/|__|_|  (____  /___|  (____  |___  / \___  >__|
            \/|__|                \/     \/     \/     \/_____/      \/
           
'

while [ $# -ge 1 ];do
    case "$1" in
        --help|-help|-h)
            help
            exit
           ;;
        --www-user)
            WWW_USER="$2"
            shift
        ;;
        --set-permissions|--permissions|-p)
            PROCEED_PERMISSIONS="1"
        ;;
        *)
            echo "Unknown parameter: $1"
            help
            exit
        ;;
    esac
    shift
done

if [ "$PROCEED_PERMISSIONS" == "1" ];then
    permissions
    exit
fi

help

exit
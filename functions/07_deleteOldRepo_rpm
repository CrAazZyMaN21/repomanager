#!/bin/bash

# La fonction a besoin de 2 paramètres pour fonctionner :
# Le nom du repo
# La date du repo
# Si aucun paramètre n'a été passé, alors on les demande (on affiche la liste des repos d'abord, pour aider):
if [ $# -eq "0" ];then
	listOldRepo
	echo -e "Informations sur le repo à supprimer :"
	infoRepo "+repo-name" "+repo-date"
else # Sinon on les récupère dans des variables REPO_*
	while [ $# -ge 1 ];do case "$1" in
		--repo-name)
			REPO_NAME="$2"
			shift
		;;
		--repo-date)
			REPO_DATE="$2"
			shift
		;;
		*)
		esac
		shift
	done
fi
if ! egrep -q "^${REPO_NAME}:${REPO_DATE}" $LISTE_REPO_ARCHIVE;then  # On vérifie que le repo renseigné est bien présent dans le fichier repos-archive.list, alors on peut commencer l'opération
	echo -e "\nErreur de syntaxe ou il n'existe aucun repo ${CYAN}${REPO_NAME} → ${REPO_DATE}${RESET} sur ce serveur..."
    clean_exit
fi
if [ "$TTY" -eq "1" ];then
	echo -ne "\nL'ancien repo ${CYAN}${REPO_NAME}${RESET} à la date ${CYAN}${REPO_DATE}${RESET} va être ${ROUGE}supprimé${RESET}. Confirmer (oui/non) : "
	read -p "" CONFIRM
	if [ "$CONFIRM" != "oui" ];then         # Si différent de oui, alors le script s'arrête
		echo -e "Arrêt du script..."
		clean_exit
	fi
fi

echo -e "\nDébut de l'opération"
sleep 1
cd ${REPOS_DIR}/ &&
echo -ne "Suppression du vieux snapshot :\t"
rm 99_old_version_${REPO_DATE}_${REPO_NAME}/ -rf && # Suppression du snapshot
echo -e "[${VERT} OK ${RESET}]"
echo -ne "Mise à jour des informations dans repos-archive.list :\t"
sed -i /^${REPO_NAME}:${REPO_DATE}/d $LISTE_REPO_ARCHIVE &&   # On mets à jour les infos dans le fichier repos.list (par exemple) en supprimant la ligne du repo
echo -e "[${VERT} OK ${RESET}]"
echo -e "${VERT}Opération terminée${RESET}"